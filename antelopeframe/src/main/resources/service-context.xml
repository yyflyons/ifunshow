<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
    http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName" default-lazy-init="true">

	<description>Spring-Database配置</description>
	<!-- 扫描service层，以便识别注入 -->
	<context:component-scan base-package="com.ifunshow.antelopeframe.web.service" />
	<!-- 读取JDBC连接数据库配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- mybatis Dao -->
	<bean id="myBatisDao" class="com.ifunshow.antelopeframe.orm.mybatis.MyBatisDao" />

	<!-- 数据源配置,使用数据库连接池 -->
	<!-- c3p0 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
        <property name="minPoolSize" value="${jdbc.minPoolSize}" />
        <property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<property name="preferredTestQuery" value="${jdbc.preferredTestQuery}" /> 
    </bean>

	<!-- mybatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 扫描实体entity类，多个包可以逗号分隔，这个也可以在mybatis-config.xml配置，但是是逐条的 -->
        <property name="typeAliasesPackage" value="com.ifunshow.antelopeframe.entity" />
        <!-- 扫描mapper文件 这个也可以在mybatis-config.xml中配置，但是是逐条的 -->
		<property name="mapperLocations" value="classpath:com/ifunshow/antelopeframe/orm/mybatis/mapper/**/*.xml" />
		<!-- 加载Mybatis配置文件的Setting设置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>
	
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.ifunshow.antelopeframe.web.service..*.*(..))" advice-ref="txAdvice" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="is*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
</beans>